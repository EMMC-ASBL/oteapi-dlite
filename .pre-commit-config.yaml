# pre-commit.ci
ci:
  autofix_commit_msg: |
      [pre-commit.ci] auto fixes from pre-commit hooks

      For more information, see https://pre-commit.ci
  autofix_prs: false
  autoupdate_branch: 'master'
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: 'weekly'
  skip: []
  submodules: false

# hooks
repos:
  # pre-commit-hooks supplies a multitude of small hooks
  # To get an overview of them all as well as the ones used here, please see
  # https://github.com/pre-commit/pre-commit-hooks#hooks-available
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
    - id: end-of-file-fixer
      exclude: ^CHANGELOG.md$
    - id: debug-statements
    - id: check-yaml
      name: Check YAML
    - id: check-toml
      name: Check TOML
    - id: trailing-whitespace
      args: [--markdown-linebreak-ext=md]
      exclude: ^CHANGELOG.md$

  # pyupgrade is a tool for automatically upgrading Python syntax for newer versions of
  # the language
  # It works on files in-place
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.19.1
    hooks:
    - id: pyupgrade
      args: [--py39-plus, --keep-runtime-typing]

  # Black is a code style and formatter
  # It works on files in-place
  - repo: https://github.com/psf/black
    rev: 25.1.0
    hooks:
    - id: black

  # ruff is a Python linter, incl. import sorter and formatter
  # It works partly on files in-place
  # More information can be found in its documentation:
  # https://docs.astral.sh/ruff/
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.9.10
    hooks:
    - id: ruff
      # Fix what can be fixed in-place and exit with non-zero status if files were
      # changed and/or there are rules violations.
      args:
      - "--fix"
      - "--exit-non-zero-on-fix"
      - "--show-fixes"
      - "--no-unsafe-fixes"

  # Bandit is a security linter
  # More information can be found in its documentation:
  # https://bandit.readthedocs.io/en/latest/
  - repo: https://github.com/PyCQA/bandit
    rev: 1.8.3
    hooks:
    - id: bandit
      args: ["-r"]
      files: ^oteapi_dlite/.*$

  # mypy is a static typing linter
  # The main code repository can be found at:
  # https://github.com/python/mypy
  # The project's documentation can be found at:
  # https://mypy.readthedocs.io/en/stable/index.html
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.15.0
    hooks:
    - id: mypy
      exclude: ^tests/.*$
      additional_dependencies:
      - "types-requests"
      - "pydantic>=2,<3"

  # ci-cd is a collection of hooks to prepare for CI/CD workflows
  # It's mainly related to documentation
  # More information can be found in its documentation:
  # https://SINTEF.github.io/ci-cd/
  - repo: https://github.com/SINTEF/ci-cd
    rev: v2.9.2
    hooks:
    - id: docs-api-reference
      args:
      - --package-dir=oteapi_dlite
      - --full-docs-folder=models
      - --full-docs-folder=strategies
    - id: docs-landing-page
      args:
      - --replacement=(LICENSE),(LICENSE.md)
      - --replacement=https://EMMC-ASBL.github.io/oteapi-dlite/latest/,
      - --replacement=all_strategies),all_strategies.md)
