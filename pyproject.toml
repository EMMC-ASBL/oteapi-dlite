[build-system]
requires = ["flit_core >=3.4,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "oteapi-dlite"
authors = [
    {name = "SINTEF", email = "Team4.0@SINTEF.no"},
]
description = "DLite plugin for Open Translation Environment (OTE) API."
readme = "README.md"
license = {file = "LICENSE"}
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
]
keywords = ["OTE", "OTEAPI", "LITE", "OTEAPI-DLITE"]
requires-python = "~=3.10"
dynamic = ["version"]

dependencies = [
    # Core dependencies
    "DLite-Python>=0.5.29,<1",
    "numpy>=2.1,<3",
    "oteapi-core>=1.0,<2",
    "pydantic-settings>=2.8,<3",
    "Pillow>=9.0.1,<12",
    "tripper[mappings]>=0.4.0,<1",
]

[project.optional-dependencies]
docs = [
    "mike~=2.1",
    "mkdocs~=1.6",
    "mkdocs-autorefs~=1.4",
    "mkdocs-awesome-pages-plugin~=2.10",
    "mkdocs-material~=9.6",
    "mkdocstrings[python]~=0.29.1",
]
testing = [
    "PyYAML~=6.0",
    "otelib~=1.0",
    "rdflib>=5.0.0,<8",
    "pytest==8.3.5",
    "pytest-cov==6.1.1",
]
dev = [
    "oteapi-dlite[docs,testing]",
    "pre-commit==4.2.0",
]

[project.urls]
Home = "https://github.com/EMMC-ASBL/oteapi-dlite"
Documentation = "https://EMMC-ASBL.github.io/oteapi-dlite"
Source = "https://github.com/EMMC-ASBL/oteapi-dlite"
"Issue Tracker" = "https://github.com/EMMC-ASBL/oteapi-dlite/issues"
Changelog = "https://github.com/EMMC-ASBL/oteapi-dlite/blob/master/CHANGELOG.md"
Package = "https://pypi.org/project/oteapi-dlite"

# Entry points, i.e., strategy registration
[project.entry-points."oteapi.filter"]
# This is deprecated, use application/vnd.dlite-filter instead
"oteapi_dlite.dlite/filter" = "oteapi_dlite.strategies.filter:DLiteFilterStrategy"

"oteapi_dlite.application/vnd.dlite-filter" = "oteapi_dlite.strategies.filter:DLiteFilterStrategy"
"oteapi_dlite.application/vnd.dlite-settings" = "oteapi_dlite.strategies.settings:SettingsStrategy"

[project.entry-points."oteapi.mapping"]
"oteapi_dlite.mappings" = "oteapi_dlite.strategies.mapping:DLiteMappingStrategy"

[project.entry-points."oteapi.parse"]
"oteapi_dlite.application/vnd.dlite-parse" = "oteapi_dlite.strategies.parse:DLiteParseStrategy"
"oteapi_dlite.application/vnd.dlite-xlsx" = "oteapi_dlite.strategies.parse_excel:DLiteExcelStrategy"
"oteapi_dlite.image/vnd.dlite-image" = "oteapi_dlite.strategies.parse_image:DLiteImageParseStrategy"

[project.entry-points."oteapi.function"]
"oteapi_dlite.application/vnd.dlite-generate" = "oteapi_dlite.strategies.generate:DLiteGenerateStrategy"
"oteapi_dlite.application/vnd.dlite-convert" = "oteapi_dlite.strategies.convert:DLiteConvertStrategy"

[tool.flit.module]
name = "oteapi_dlite"

[tool.flit.sdist]
exclude = [
    ".github/",
    "tests/",
    ".gitignore",
    ".pre-commit-config.yaml",
    ".codecov.yml",
]

[tool.mypy]
python_version = "3.10"
ignore_missing_imports = true
scripts_are_modules = true
warn_unused_configs = true
show_error_codes = true
allow_redefinition = true
plugins = ["pydantic.mypy"]

[tool.pytest.ini_options]
minversion = "8.3"
addopts = "-rs --cov-report=term-missing:skip-covered --no-cov-on-fail"
filterwarnings = [
    # Treat all warnings as errors
    "error",

    # Ignore Userwarning from tripper cache in Windows
    "ignore:.*Cannot access cache file.*:UserWarning",

    "ignore::DeprecationWarning",
]

[tool.black]
line-length = 80

[tool.ruff]
line-length = 80

[tool.ruff.lint]
extend-select = [
  "E",  # pycodestyle
  "F",  # pyflakes
  "B",  # flake8-bugbear
  "BLE",  # flake8-blind-except
  "I",  # isort
  "ARG",  # flake8-unused-arguments
  "C4",  # flake8-comprehensions
  "ICN",  # flake8-import-conventions
  "G",  # flake8-logging-format
  "PGH",  # pygrep-hooks
  "PIE",  # flake8-pie
  "PL",  # pylint
  "PT",  # flake8-pytest-style
  "PTH",  # flake8-use-pathlib
  "RET",  # flake8-return
  "RUF",  # Ruff-specific
  "SIM",  # flake8-simplify
  "T20",  # flake8-print
  "YTT",  # flake8-2020
  "EXE",  # flake8-executable
  "PYI",  # flake8-pyi
]
ignore = [
  "PLR",  # Design related pylint codes
]
isort.required-imports = ["from __future__ import annotations"]
